{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CI",
				"Circle_RAD"
			],
			[
				"USER",
				"USER_IMAGE_SIDE"
			],
			[
				"USE",
				"USER_IMAGE_SIDE"
			],
			[
				"dia",
				"diagonal2"
			],
			[
				"for",
				"for	For Loop"
			],
			[
				"sq",
				"square"
			],
			[
				"squ",
				"sqaure"
			],
			[
				"summa",
				"summateColumn"
			]
		]
	},
	"buffers":
	[
		{
			"file": "mainUIPanels.pde",
			"settings":
			{
				"buffer_size": 477,
				"line_ending": "Unix"
			}
		},
		{
			"file": "UserSelection.pde",
			"settings":
			{
				"buffer_size": 1,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "class CircleSpeed{\n \n float xspeed;\n float yspeed;\n float xaccel;\n float yaccel;\n float xpos;\n float ypos;\n float radius;\n \n //color\n color circleColor;\n float R,G,B;\n float alpha;\n float minHUE;\n float maxHUE;\n float minSAT;\n float maxSAT;\n float minBRIGHT;\n float maxBRIGHT;\n \n\n CircleSpeed(int rad)\n {\n   if (ypos==xpos){\n     ypos = 240f;\n     xpos = 240f;\n   }\n   xspeed = random(-2,2);\n   yspeed = random(-2,2);\n   xaccel = random (-.5, 1); //lopsided pull \"gravity?\"\n   yaccel = random (-1,1);\n   radius = (float) rad;\n   \n   minHUE = 0;\n   minSAT = 0;\n   minBRIGHT = 0;\n   maxHUE = 360;\n   maxSAT = 100;\n   maxBRIGHT = 100;\n   \n   R = random (255);\n   G = random (255);\n   B = random (255);\n   circleColor = color(R,G,B,76);\n   radius += 2* sqrt(xspeed*xspeed + yspeed*yspeed);\n } \n \n CircleSpeed(int rad, float xstem, float ystem){\n   this(rad);\n   xpos = xstem;\n   ypos = ystem;\n   \n }\n \n float[] getCoords()\n {\n   float[] out = {xpos,ypos} ;\n   return out;\n }\n\n void setAlpha(float A){//should be 0-255\n   alpha = A;\n   circleColor = color(R,G,B,alpha);\n }\n \n void setHues(float min, float max){\n   colorMode(HSB);\n   float tempHUE = hue(circleColor);\n   float tempSAT = saturation(circleColor);\n   float tempBright = brightness(circleColor);\n   minHUE = min;\n   maxHUE = max;\n   if (tempHUE < minHUE || tempHUE > maxHUE)  //then recolor the thing\n       circleColor = color(random(minHUE, maxHUE) , tempSAT, tempBright); \n   \n   colorMode(RGB);\n }\n \n \n void setSats (float min, float max){\n    colorMode(HSB);\n    float tempHUE = hue(circleColor);\n    float tempSAT = saturation(circleColor);\n    float tempBright = brightness(circleColor);\n    float percentSAT = ((tempSAT -minSAT )/ (maxSAT - minSAT) );\n    float newSAT = ((max-min) * percentSAT) + min ;\n    minSAT = min;\n    maxSAT = max;\n   \n    circleColor = color(tempHUE, newSAT, tempBright);\n    colorMode(RGB);\n }\n \n void setBright (float min, float max){\n   colorMode(HSB);\n   float tempHUE = hue(circleColor);\n   float tempSAT = saturation(circleColor);\n   float tempBright = brightness(circleColor);\n   float percentBright = (tempBright - minBRIGHT) / (maxBRIGHT - minBRIGHT) ;\n   float newBright = ((max-min * percentBright) + min) ;  \n   minBRIGHT = min;\n   maxBRIGHT = max;\n   \n   circleColor = color(tempHUE, tempSAT, newBright); \n   colorMode(RGB);\n   \n }\n \n void setColorsAtStart(float minHUE, float maxHUE,\n                   float minSAT, float maxSAT,\n                   float minBright, float maxBright)\n {\n   colorMode(HSB);\n   this.minHUE = minHUE;\n   this.maxHUE = maxHUE; \n   this.minSAT = minSAT;\n   this.maxSAT = maxSAT;\n   this.minBRIGHT = minBright;\n   this.maxBRIGHT = maxBright;\n   \n   float H_color = random(minHUE, maxHUE);\n   float S_color = random(minSAT, maxSAT);\n   float B_color = random(minBRIGHT, maxBRIGHT);\n   \n   circleColor = color(H_color, S_color, B_color);\n   colorMode(RGB);\n }\n \n \n \n void update(){\n \n  xpos += xspeed;\n  ypos += yspeed;\n  xspeed += xaccel*.05;\n  yspeed += yaccel*.05;\n  //radius = 20* sqrt(xspeed*xspeed + yspeed*yspeed);\n }\n \n void draw(){\n   stroke(12);\n   fill(circleColor);\n   ellipse(xpos,ypos,radius,radius);\n }\n \n boolean isInFrame(float Xdim, float Ydim){\n   \n  if (xpos + radius < 0 || ypos+radius < 0)\n    return false;\n  if (xpos-radius > Xdim || ypos-radius > Ydim)\n    return false;\n\n  return true;\n }\n}\n",
			"file": "CircleSpeed.pde",
			"file_size": 3347,
			"file_write_time": 130084013214130000,
			"settings":
			{
				"buffer_size": 3348,
				"line_ending": "Unix"
			}
		},
		{
			"file": "drawBG.pde",
			"settings":
			{
				"buffer_size": 3841,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n/*-----------------------USER------------------------------\n\nThis should make the little name tiles for a user. \nIt should be a photo then a placard with information.\nIf one is clicked, it should be somewhat centered and maximized to show more infor mation\nClicking a maximized placard will select it\nUser Image is a square\n\n*///----------------------------------------------------------\n\nclass User_Panel {\n\n	private final float USER_IMAGE_SIDE = 40;	//16 pixels\n	private final float PADDING = 9; //5px\n	PFont userFont;\n\n	float xposition;\n	float yposition;\n  boolean expanded;\n \n	User_Panel()\n	{\n      userFont = createFont(\"SegoeUI-Light\", 15);\n	   //textFont(userFont);\n	   //textAlign(CENTER, CENTER);\n	   //text(\"!@#$%\", width/2, height/2);\n\n	   xposition = 100;\n	   yposition = 200;\n     expanded = false;\n	   this.draw();\n   }\n\n    public void draw(){\n\n      if (!expanded) //WHEN it is not expanded\n        {\n        //Set BG tranparent slate\n      	fill(26,181,167,100);\n      	stroke(0,17,54,100);\n      	rect(xposition, yposition , 250, USER_IMAGE_SIDE + (PADDING*2) );\n        	\n        \n        //User Image\n      	fill(4,30,56);\n      	//stroke(20,150);\n        noStroke();\n      	rect(xposition+PADDING,  yposition+PADDING , USER_IMAGE_SIDE,  USER_IMAGE_SIDE,1.5);\n\n      	//Draw name tab\n      	fill(9);\n      	noStroke();\n      	textFont(userFont);\n  	   textAlign(LEFT, BOTTOM);\n  	   text(\"FirstName LastName\", xposition + USER_IMAGE_SIDE + PADDING*2 , yposition + PADDING + (USER_IMAGE_SIDE * 0.8f));\n     }\n     else \n     {\n       \n      \n       fill(26,181,167,100);\n       stroke(0,17,54,100);\n       rect(xposition, yposition , 250, USER_IMAGE_SIDE + (PADDING*2) );\n          \n        \n        //User Image\n       fill(4,30,56);\n        //stroke(20,150);\n       noStroke();\n       rect(xposition+PADDING,  yposition+PADDING , USER_IMAGE_SIDE,  USER_IMAGE_SIDE,1.5);\n\n        //Draw name tab\n       fill(9);\n       noStroke();\n       textFont(userFont);\n       textAlign(LEFT, BOTTOM);\n       text(\"FirstName LastName\", xposition + USER_IMAGE_SIDE + PADDING*2 , yposition + PADDING + (USER_IMAGE_SIDE * 0.8f));\n\n\n     }\n\n\n\n    }\n  \n	\n\n\n}\n\n",
			"file": "User_Panel.pde",
			"file_size": 1547,
			"file_write_time": 130086336650474621,
			"settings":
			{
				"buffer_size": 2164,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 173.0,
		"selected_items":
		[
			[
				"ssja",
				"Set Syntax: Java"
			],
			[
				"ssj",
				"Set Syntax: Java"
			],
			[
				"ss",
				"Set Syntax: Plain Text"
			],
			[
				"ssbu",
				"Set Syntax: NAnt Build File"
			],
			[
				"file",
				"File: New View into File"
			],
			[
				"ssc",
				"Set Syntax: C"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Users/JohannMG/Downloads/photoshop-v.1.0.1-source-code/UScreen.a",
		"/D/Users/JohannMG/Downloads/photoshop-v.1.0.1-source-code/UChannel.p",
		"/D/Users/JohannMG/Downloads/photoshop-v.1.0.1-source-code/UAbout.p",
		"/D/Users/JohannMG/Downloads/photoshop-v.1.0.1-source-code/UAbout.a.inc",
		"/D/Users/JohannMG/Documents/School/12-13 UF/COP-C/hw2/pa2.c",
		"/D/Users/JohannMG/Documents/School/12-13 UF/COP-C/Sketches/skt.c",
		"/D/Users/JohannMG/Downloads/photoshop-v.1.0.1-source-code/UAdjust.a"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"25",
			"}",
			"myFont",
			"intx",
			"y",
			"Diagonal1",
			"sqaure",
			"x",
			"y"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mainUIPanels.pde",
					"settings":
					{
						"buffer_size": 477,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "UserSelection.pde",
					"settings":
					{
						"buffer_size": 1,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "CircleSpeed.pde",
					"settings":
					{
						"buffer_size": 3348,
						"regions":
						{
						},
						"selection":
						[
							[
								365,
								365
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 130.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "drawBG.pde",
					"settings":
					{
						"buffer_size": 3841,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 514.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "User_Panel.pde",
					"settings":
					{
						"buffer_size": 2164,
						"regions":
						{
						},
						"selection":
						[
							[
								1561,
								1561
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 224.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
